" Misc Reminders
" gt: Switch tabs
" :F  Configured to open fzf (default is :FZF)

set nocompatible              " be iMproved, required
filetype off                  " required
syntax on
set number
set mouse=n

set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab
set incsearch   " Incremental search
set ignorecase  " Ignore case search
set hlsearch    " Highlight
set encoding=utf-8



" Move tabs with Alt+Left/Right
" nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
" nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . (tabpagenr()+1)<CR>


" ===============
" ==== VUNDLE ===
" ===============
"
set rtp+=~/.vim/bundle/Vundle.vim  " set runtime path to vundle
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'rip-rip/clang_complete'
"Plugin 'Valloric/YouCompleteMe'


call vundle#end()            " required
filetype plugin indent on    " required

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" === END OF VUNDLE ===



" === AIRLINE ===
let g:airline#extensions#tabline#enabled = 1 
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_theme='jellybeans'

" === CLANG COMPLETE ===
" let g:clang_library_path='/usr/lib/llvm-6.0/lib'
let g:clang_library_path='/usr/lib/llvm-6.0/lib/libclang.so.1'
let g:clang_use_library=1

" === YCM ===
"let g:ycm_confirm_extra_conf=0
"let g:ycm_show_diagnostics_ui=0


" ===========
" === fzf ===
" ===========
"
" " This is the default extra key bindings
set rtp+=~/.fzf  " fzf
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-x': 'split',
  \ 'ctrl-b': 'vsplit' }

" Default fzf layout
" - down / up / left / right
let g:fzf_layout = { 'down': '~40%' }

" In Neovim, you can set up fzf window using a Vim command
let g:fzf_layout = { 'window': 'enew' }
let g:fzf_layout = { 'window': '-tabnew' }
let g:fzf_layout = { 'window': '10new' }

" Customize fzf colors to match your color scheme
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Enable per-command history.
" CTRL-N and CTRL-P will be automatically bound to next-history and
" previous-history instead of down and up. If you don't like the change,
" explicitly bind the keys to down and up in your $FZF_DEFAULT_OPTS.
let g:fzf_history_dir = '~/.local/share/fzf-history'
let g:fzf_command_prefix = 'fz'

:command F FZF



